version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 631204218401.dkr.ecr.eu-west-1.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - REPOSITORY_URI=631204218401.dkr.ecr.eu-west-1.amazonaws.com/web-app-repo
      - IMAGE_URI=$REPOSITORY_URI:$IMAGE_TAG
      - echo $IMAGE_URI
      - task_definition="webapptd1"                        # <-- ADD THIS
      - container_name="web-app-container1"               # <-- ADD THIS
      - container_port=80   

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker push $REPOSITORY_URI:latest
      - docker tag $REPOSITORY_URI:latest $IMAGE_URI
      - docker push $IMAGE_URI
      - "printf 'version: 0.0\nResources:\n  - TargetService:\n      Type: AWS::ECS::Service\n      Properties:\n        TaskDefinition: <TASK_DEFINITION>\n        LoadBalancerInfo:\n          ContainerName: \"${container_name}\"\n          ContainerPort: ${container_port}' > appspec.yaml"
      - aws ecs describe-task-definition --output json --task-definition ${task_definition} --query taskDefinition > template.json
      - jq '.containerDefinitions | map((select(.name == "${container_name}") | .image) |= "<IMAGE1_NAME>") | {"containerDefinitions":.}' template.json > template2.json
      - jq -s '.[0] * .[1]' template.json template2.json > taskdef.json- cat taskdef.json


  post_build:
    commands:
      - echo "[{\"name\":\"web-app-container1\",\"imageUri\":\"$IMAGE_URI\"}]" > imagedefinitions.json
      - cat imagedefinitions.json
      - cat taskdef.json
      - cat appspec.yaml

artifacts:
  files:
    - taskdef.json
    - imagedefinitions.json
    - appsec.yaml
  
