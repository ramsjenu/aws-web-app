version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 631204218401.dkr.ecr.eu-west-1.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - REPOSITORY_URI=631204218401.dkr.ecr.eu-west-1.amazonaws.com/web-app-repo
      - IMAGE_URI=$REPOSITORY_URI:$IMAGE_TAG
      - CONTAINER_NAME="web-app-container1"
      - CONTAINER_PORT=80
    
  build:
    commands:
      - echo "Building and pushing Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $IMAGE_URI
      - docker push $REPOSITORY_URI:latest
      - docker push $IMAGE_URI
      - echo "Fetching ECS task definition..."

      - aws ecs describe-task-definition --task-definition webapptd1 --query taskDefinition --output json > template.json
      - |
        jq --arg IMAGE "$IMAGE_URI" --arg NAME "$CONTAINER_NAME" \
        '.containerDefinitions |= map(if .name == $NAME then .image = $IMAGE else . end)' \
        template.json > taskdef.json
      - |
        echo "version: 0.0" > appspec.yaml
        echo "Resources:" >> appspec.yaml
        echo "  - TargetService:" >> appspec.yaml
        echo "      Type: AWS::ECS::Service" >> appspec.yaml
        echo "      Properties:" >> appspec.yaml
        echo "        TaskDefinition: taskdef.json" >> appspec.yaml
        echo "        LoadBalancerInfo:" >> appspec.yaml
        echo "          ContainerName: \"$CONTAINER_NAME\"" >> appspec.yaml
        echo "          ContainerPort: $CONTAINER_PORT" >> appspec.yaml

  post_build:
    commands:
      - echo "[{\"name\":\"$CONTAINER_NAME\",\"imageUri\":\"$IMAGE_URI\"}]" > imagedefinitions.json
      - cat imagedefinitions.json
      - cat taskdef.json
      - cat appspec.yaml

artifacts:
  files:
    - taskdef.json
    - appspec.yaml
    - imagedefinitions.json
