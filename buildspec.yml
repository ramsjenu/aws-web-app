version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 631204218401.dkr.ecr.eu-west-1.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - REPOSITORY_URI=631204218401.dkr.ecr.eu-west-1.amazonaws.com/web-app-repo
      - IMAGE_URI=$REPOSITORY_URI:$IMAGE_TAG
      - echo "Image URI: $IMAGE_URI"
      - CONTAINER_NAME="web-app-container1"
      - CONTAINER_PORT=80
      - TASK_DEF_NAME="webapptd1"

  build:
    commands:
      - echo "Building and pushing Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $IMAGE_URI
      - docker push $REPOSITORY_URI:latest
      - docker push $IMAGE_URI

      # Fetch latest task definition
      - echo "Fetching existing task definition..."
      - aws ecs describe-task-definition \
          --task-definition $TASK_DEF_NAME \
          --query taskDefinition \
          --output json > template.json

      # Inject new image into container definition
      - echo "Injecting new image into task definition..."
      - jq --arg IMAGE "$IMAGE_URI" --arg NAME "$CONTAINER_NAME" '
          .containerDefinitions |= map(
            if .name == $NAME then .image = $IMAGE else . end
          )' template.json > taskdef.json

      # Generate AppSpec file
      - echo "Generating appspec.yaml..."
      - |
        cat <<EOF > appspec.yaml
        version: 0.0
        Resources:
          - TargetService:
              Type: AWS::ECS::Service
              Properties:
                TaskDefinition: taskdef.json
                LoadBalancerInfo:
                  ContainerName: "$CONTAINER_NAME"
                  ContainerPort: $CONTAINER_PORT
        EOF

  post_build:
    commands:
      - echo "[{\"name\":\"$CONTAINER_NAME\",\"imageUri\":\"$IMAGE_URI\"}]" > imagedefinitions.json
      - echo "Build complete."

artifacts:
  files:
    - taskdef.json
    - appspec.yaml
    - imagedefinitions.json
